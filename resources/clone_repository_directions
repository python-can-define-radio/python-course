# How to Clone a Github.com "Repository" on a Local Computer

This assumes the local computer is running a Linux OS.

(Clone = to download a copy with capability of synchronizing changes by "push" & "pull" activities)

Updated: July 24, 2023

## A) Create SSH security key on local computer and provide it to you github acct.

### A.1) Create SSH security key locally
- open a Terminal window in Linux OS.
- change directory to home directory if not already there `cd ~`
- change directory to .ssh  (dot = hidden directory)  `cd .ssh`

  If you get error "no such directory", then type `mkdir .ssh` and then `cd .ssh`
- OPTIONAL: Remove existing keys "rm (filename + *)"
- Generate ssh key using:   `ssh-keygen -t ed25519 -C "{Location} github SSH key"`
  
  (You can change the memo "{Location} github SSH key" to suit you.  
  Replace {Location} with something to identify the local computer or, optionally, delete it.)
  - save to default location
  - enter passphrase you want to use
  - enter passphrase again
- use cat to view the key:  `cat id_ed25519.pub` and copy it to clipboard.  (Can select with mouse. Then `{Ctrl}+{Shft}+{c}`)

### A.2) Add the new public SSH key to your github account:
- Log-in to your github.com "personal account"
- Click the user icon located in upper right corner of window.  A list of activities will be displayed.
- Select "settings" from bottom of the list of actions.  A webpage will open.  
- Click "SSH and GPG Keys" from the options on the left, half-way down.
- Press green button "New SS key", located toward upper right of screen.
- Name the key (e.g., using location of local computer)
- Paste the SSH key from clipboard in to the appropriate field.
- Press the green `Add SSH key` button at bottom of page.

## B) OPTION -- Copy an exiting SSH security key to a second local computer
This method requires you have copy of both the public and the private files (e.g., id_ed25519 & id_ed25519.pub) for an SSH public key, and that public SSH key should be already known by your github account.  E.g., This can be true if you first run Step A.1, above, on a first local computer before running this current step on a second local computer and have made the key pair available to the second local computer by downloading or trasnferring by a flash drive, etc.
- Store a pair of exiting public and the private SSH keys in the `./ssh` folder of the second local computer.
- Change the properties of the private ssh key so only your local user can access it, dissallowing any current or future group members from accessing it. E.g.,
  - In a terminal window type `chmod 600 /.ssh/id_ed25519`
  - Verify permission by typing: `ls -la ~/.ssh` in the Terminal window.
  - The result should show `-rw-------  {other details} {Date} id_ed25519`

    NOTE: If you do not restrict the file access properties as shown here. Later, the command "git clone..." will complain.

## C) To copy repository from github.com to local computer
- Inside github navigate to the intended repository and click green `<> Code' button and copy the SSH URL to clipboard
- In terminal window of local computer, cd to a folder/directory to receive the repository.  Note: The repository's name will become a sub-folder within the folder you choose.
- In terminal window type `git clone` and paste the SSH URL (e.g., `{Ctrl}+{Shft}+{v}`)
  -  Acknowledge the warning "The authenticity of host 'github.com (140.82.114.3)' can't be established." by entering `yes`.  

    Optionally, _before approving_, use the internet to search for the "CDSA key fingerprint" that is displayed in the Terminal window.  Confirm that github.com claims it as its own.  This can be done with a search engine or at https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/githubs-ssh-key-fingerprints
  - if requested, enter the passphrase that was used to create the SSH key (See above.).
- change directory to repository
- Define the username for repository; type: `git config user.name {your github username}`.  [No news is good news. I.e., when done, no response will be given by Linux.]
  - option, IF you are using a "personal" acct on local computer, you can include "--global" after "config".
- type `git log` to identify and copy your git e-mail address to the "clip board".
   - **Press `q` to exit the git log**
- Using the e-mail address you identified (above), define the git e-mail address to use for pushes and pulls from/to the local computer.  In a terminal window, type: 

  ` git config user.email {YOUR_GIT_E-MAIL ADDR}@users.noreply.github.com` 

## D) Now you can push (upload file updates) or pull (download file updates) as desired.  

This can be easily done in the Terminal or in the M.S. Visual Studio Code program.  
- E.g., To **pull** using the Terminal:
  - Type `git fetch' to update local computer's knowledge of the on-line repository.
  - Type 'git status' to read the local computer's comparison between on-line & local copies: 
  - Type 'git pull`
-  To **push** from local computer to the on-line reposistory, it's easiest to work in M.S. Visual Studio Code.
